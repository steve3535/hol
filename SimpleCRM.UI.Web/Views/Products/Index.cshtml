@model IEnumerable<SimpleCRM.Entities.Product>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ProductCategory.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProductModel.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProductNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Color)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StandardCost)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ListPrice)
        </th>
       
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ProductCategory.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ProductModel.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ProductNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Color)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StandardCost)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ListPrice)
        </td>
        
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ProductID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ProductID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ProductID })
        </td>
    </tr>
}
    <tr>
        <td>@Html.ActionLink("First", "Index", new { pageindex = 0, pagesize = @ViewBag.PageSize })  </td>
        @if (@ViewBag.PageIndex != 0)
        {
            <td>@Html.ActionLink("Previous", "Index", new { pageindex = @ViewBag.PageIndex - 1, pagesize = @ViewBag.PageSize })</td>
        }
        @if (@ViewBag.TotalPages != @ViewBag.PageIndex)
        {
            <td>@Html.ActionLink("Next", "Index", new { pageindex = @ViewBag.PageIndex +  1, pagesize = @ViewBag.PageSize })</td>
        }
        <td>@Html.ActionLink("Last", "Index", new { pageindex = @ViewBag.TotalPages, pagesize = @ViewBag.PageSize })</td>
    </tr>

</table>
